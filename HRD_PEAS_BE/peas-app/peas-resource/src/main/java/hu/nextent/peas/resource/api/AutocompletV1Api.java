/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.11).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package hu.nextent.peas.resource.api;

import hu.nextent.peas.model.AutocompletModel;
import hu.nextent.peas.model.AutocompletQueryModel;
import hu.nextent.peas.model.ErrorMessageModel;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.io.IOException;
import java.util.List;
import java.util.Optional;
@Api(value = "autocomplet_v1", description = "the autocomplet_v1 API")
public interface AutocompletV1Api {

    Logger log = LoggerFactory.getLogger(AutocompletV1Api.class);

    default Optional<ObjectMapper> getObjectMapper() {
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest() {
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }
	

    @ApiOperation(value = "Task nevek gyorskereső", nickname = "queryAutocomplet", notes = "Taskok lekérdezése<br/> Keres a névben és a leírásban<br/> <br/> autocompletType: Lekérdezés típusa<br/>     Típusok:       - task<br/>         Task nevében Keres<br/>         ADMIN/HR: esetben minden taskban<br/>         USER: Csak saját taskban<br/>         LEADER: Beosztottak taskjaiban<br/>       - user<br/>         Minden felhasználóban keres<br/>       - company<br/>         ADMIN: Minden cég nevében<br/>         Egyébb esetben: Csak saját céget adja vissza<br/>       - difficulty<br/>         Az adott céghez tartozó nehézségekben<br/>       - companyVirtue<br/>         Az adott céghez céges értékekben<br/>       - leaderVirtue<br/>         A belépett felhasználó vezetőjének az csoport értékeiben<br/>       - factor<br/>         Az adott céghez rendelt szempontokban keres<br/>", response = AutocompletModel.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "resource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Gyorskereső", response = AutocompletModel.class),
        @ApiResponse(code = 200, message = "Általános hibaüzenet", response = ErrorMessageModel.class) })
    @RequestMapping(value = "/autocomplet_v1",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    default ResponseEntity<AutocompletModel> queryAutocomplet(@ApiParam(value = "" ,required=true )  @Valid @RequestBody AutocompletQueryModel body) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{\r\n  \"filter\" : \"filter\",\r\n  \"limit\" : 1,\r\n  \"autocompletType\" : \"autocompletType\",\r\n  \"content\" : [ {\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 0\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"description\" : \"description\",\r\n    \"id\" : 0\r\n  } ],\r\n  \"totalElements\" : 6\r\n}", AutocompletModel.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default AutocompletV1Api interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
