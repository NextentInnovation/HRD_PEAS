openapi: "3.0.0"
info:
  title: PEAS User API
  description: ...
  version: 1.0.0
  contact:
    name: Nextent Informatics
    email: apiteam@nextent.hu
    url: http://nextent.hu
servers:
  - url: "http://127.0.0.1:8080/peas-user"
    description: local szerver
  - url: "http://localhost:8080/peas-user"
    description: local szerver
  - url: "http://wildfly-peas.nextentdmz.hu:8080/peas-user"
    description: demo szerver
tags:
  - name: users
    description: Felhasználó kezelés


paths:
  /users_v1:
    put:
      tags:
        - users
      summary: Felhasználók lekérdezése kereső paraméterekkel
      description: >-
        Felhasználók lekérdezése kereső paraméterekkel
      operationId: getAllUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserQueryParameterModel"
      responses:
        200:
          description: >-
            Felhasználók adatai
            Ha a queryType normal, akkor teljes információt adunk vissza a felhasználóról
            Ha a queryType simple, akkor egyszerűsített információt adunk vissza a felhasználóról
          content:
            application/json:
              schema:
                $ref: "common.yml#/components/UserPageModel"
        204:
          $ref: "common.yml#/response/NoContentResponse"
        default:
          $ref: "common.yml#/response/DefaultErrorResponse"

  /user_v1/{userId}:
    get:
      tags:
        - users
      summary: Egy felhasználó lekérdezése
      description: >-
        Egy felhasználó lekérdezése<br/>
        Itt egy adott felhasználó teljes objektumként adunk vissza
      operationId: getUser
      parameters:
        - name: userId
          in: path
          required: true
          description: Kiválasztott felhasználó azonosító
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Felhasználó adata
          content:
            application/json:
              schema:
                $ref: "common.yml#/components/UserModel"
        default:
          $ref: "common.yml#/response/DefaultErrorResponse"


components:

  schemas:

    UserQueryParameterModel:
      allOf:
        - $ref: "common.yml#/components/PagingAndSortingModel"
        - properties:
            id:
              type: integer
              format: int64
              nullable: true
              description: Felhasználó azonosító
              example: 12
            queryType:
              type: string
              enum:
                - simple
                - normal
              nullable: true
              default: simple
              description: >-
                Lekérdezésben visszadott model típusa<br/>
                simple:<br/>
                  UserSimple<br/>
                normal:<br/>
                  User<br/>
              example: simple
            name:
              type: string
              nullable: true
              description: Felhasználó név
              example: tamás
            fullName:
              type: string
              nullable: true
              description: Teljes név
              example: tamás
            email:
              type: string
              nullable: true
              description: Teljes név
              example: tamás@
            companyName:
              type: string
              nullable: true
              description: Cég név
              example: audi
            companyFullname:
              type: string
              nullable: true
              description: Cég teljes név
              example: audi
            organization:
              type: string
              nullable: true
              description: Szervezeti egység
              example: appdev


  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT # optional, arbitrary value for documentation purposes

security:
  - bearerAuth: []

